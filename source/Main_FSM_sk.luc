module Main_FSM_sk (
    input clk,  // clock
    input rst,  // reset
    input start, // start button
    output asel[2],
    output bsel[3],
    output wdsel,
    output alufn[6],
    output stu,
    output we,
    output ra[4],
    output rb[4],
    output rc[4],
    
  ) {
  .clk(clk) {
    .rst(rst) {
      fsm state = {INCREASECOUNT, SHIFTBLOCK1, SHIFTBLOCK2, SHIFTBLOCK3, SHIFTBLOCK4, RANDCOL, CHECKCOL, BRANCHCOL, RANDCOLOUR, ADDCOLOR, ADDBLOCK, STORECOL, CHECKEMPTYROW, BRANCHEMPTYROW, CHECKPLAYERPOS, BRANCHSCORE, CHECKCOMBO, ADDCOMBO, MULCOMBO, ADDSCORE, RESETCOMBO, MINUSHEALTH, CHECKHEALTH, BRANCHHEALTH, COUNTERMOD, CHECKMOD, INCREASECLK, CLKHOLD, END, IDLE}; // default will be IDLE
    }
  }

  always {
    asel = 2b0;
    bsel = 3b0;
    wdsel = 0;
    stu = 0;
    we = 0;
    ra = 4b0;
    rb = 4b0;
    rc = 4b0;
    alufn = 6b0;
    
    case(state.q) {
      state.INCREASECOUNT:
        alufn = 6b000000; //ADD
        ra = 4b0111;
        rc = 4b0111;
        asel = 2b00;
        bsel = 3b001;
        state.d = state.SHIFTBLOCK1;
        
      state.SHIFTBLOCK1:
        alufn = 6b100000; //SHL
        ra = 4b0111;
        rc = 4b0111;
        asel = 2b00;
        bsel = 3b001;
        state.d = state.SHIFTBLOCK1;
      
      state.SHIFTBLOCK2:
      
      state.SHIFTBLOCK3:
      
      state.SHIFTBLOCK4:
      
      state.RANDCOL:
      
      state.CHECKCOL:
      
      state.BRANCHCOL:
      
      state.RANDCOLOUR:
      
      state.ADDCOLOR:
      
      state.ADDBLOCK:
      
      state.STORECOL:
      
      state.CHECKEMPTYROW:
      
      state.BRANCHEMPTYROW:
      
      state.CHECKPLAYERPOS:
      
      state.BRANCHSCORE:
      
      state.CHECKCOMBO:
      
      state.ADDCOMBO:
      
      state.MULCOMBO:
      
      state.ADDSCORE:
      
      state.RESETCOMBO:
      
      state.MINUSHEALTH:
      
      state.CHECKHEALTH:
      
      state.BRANCHHEALTH:
      
      state.COUNTERMOD:
      
      state.CHECKMOD:
      
      state.INCREASECLK:
      
      state.CLKHOLD:
      
      state.END:
      
      state.IDLE:
      
  }
}
    
